// THIS IS AN AUTOGENERATED FILE. DO NOT MODIFY.

package nintaco.api.server;

import java.io.IOException;

public class LocalProxy extends LocalBase {

    @Override
    public void callMethod(final int methodValue) throws Throwable {
        switch (methodValue) {
            case 23:
                api.setPaused(stream.readBoolean());
                break;
            case 24:
                stream.writeBoolean(api.isPaused());
                break;
            case 25:
                stream.writeInt(api.getFrameCount());
                break;
            case 26:
                stream.writeInt(api.getA());
                break;
            case 27:
                api.setA(stream.readInt());
                break;
            case 28:
                stream.writeInt(api.getS());
                break;
            case 29:
                api.setS(stream.readInt());
                break;
            case 30:
                stream.writeInt(api.getPC());
                break;
            case 31:
                api.setPC(stream.readInt());
                break;
            case 32:
                stream.writeInt(api.getX());
                break;
            case 33:
                api.setX(stream.readInt());
                break;
            case 34:
                stream.writeInt(api.getY());
                break;
            case 35:
                api.setY(stream.readInt());
                break;
            case 36:
                stream.writeInt(api.getP());
                break;
            case 37:
                api.setP(stream.readInt());
                break;
            case 38:
                stream.writeBoolean(api.isN());
                break;
            case 39:
                api.setN(stream.readBoolean());
                break;
            case 40:
                stream.writeBoolean(api.isV());
                break;
            case 41:
                api.setV(stream.readBoolean());
                break;
            case 42:
                stream.writeBoolean(api.isD());
                break;
            case 43:
                api.setD(stream.readBoolean());
                break;
            case 44:
                stream.writeBoolean(api.isI());
                break;
            case 45:
                api.setI(stream.readBoolean());
                break;
            case 46:
                stream.writeBoolean(api.isZ());
                break;
            case 47:
                api.setZ(stream.readBoolean());
                break;
            case 48:
                stream.writeBoolean(api.isC());
                break;
            case 49:
                api.setC(stream.readBoolean());
                break;
            case 50:
                stream.writeInt(api.getPPUv());
                break;
            case 51:
                api.setPPUv(stream.readInt());
                break;
            case 52:
                stream.writeInt(api.getPPUt());
                break;
            case 53:
                api.setPPUt(stream.readInt());
                break;
            case 54:
                stream.writeInt(api.getPPUx());
                break;
            case 55:
                api.setPPUx(stream.readInt());
                break;
            case 56:
                stream.writeBoolean(api.isPPUw());
                break;
            case 57:
                api.setPPUw(stream.readBoolean());
                break;
            case 58:
                stream.writeInt(api.getCameraX());
                break;
            case 59:
                api.setCameraX(stream.readInt());
                break;
            case 60:
                stream.writeInt(api.getCameraY());
                break;
            case 61:
                api.setCameraY(stream.readInt());
                break;
            case 62:
                stream.writeInt(api.getScanline());
                break;
            case 63:
                stream.writeInt(api.getDot());
                break;
            case 64:
                stream.writeBoolean(api.isSpriteZeroHit());
                break;
            case 65:
                api.setSpriteZeroHit(stream.readBoolean());
                break;
            case 66:
                stream.writeInt(api.getScanlineCount());
                break;
            case 67:
                api.requestInterrupt();
                break;
            case 68:
                api.acknowledgeInterrupt();
                break;
            case 69:
                stream.writeInt(api.peekCPU(stream.readInt()));
                break;
            case 70:
                stream.writeInt(api.readCPU(stream.readInt()));
                break;
            case 71:
                api.writeCPU(stream.readInt(), stream.readInt());
                break;
            case 72:
                stream.writeInt(api.peekCPU16(stream.readInt()));
                break;
            case 73:
                stream.writeInt(api.readCPU16(stream.readInt()));
                break;
            case 74:
                api.writeCPU16(stream.readInt(), stream.readInt());
                break;
            case 75:
                stream.writeInt(api.peekCPU32(stream.readInt()));
                break;
            case 76:
                stream.writeInt(api.readCPU32(stream.readInt()));
                break;
            case 77:
                api.writeCPU32(stream.readInt(), stream.readInt());
                break;
            case 78:
                stream.writeInt(api.readPPU(stream.readInt()));
                break;
            case 79:
                api.writePPU(stream.readInt(), stream.readInt());
                break;
            case 80:
                stream.writeInt(api.readPaletteRAM(stream.readInt()));
                break;
            case 81:
                api.writePaletteRAM(stream.readInt(), stream.readInt());
                break;
            case 82:
                stream.writeInt(api.readOAM(stream.readInt()));
                break;
            case 83:
                api.writeOAM(stream.readInt(), stream.readInt());
                break;
            case 84:
                stream.writeBoolean(api.readGamepad(stream.readInt(),
                        stream.readInt()));
                break;
            case 85:
                api.writeGamepad(stream.readInt(), stream.readInt(),
                        stream.readBoolean());
                break;
            case 86:
                stream.writeBoolean(api.isZapperTrigger());
                break;
            case 87:
                api.setZapperTrigger(stream.readBoolean());
                break;
            case 88:
                stream.writeInt(api.getZapperX());
                break;
            case 89:
                api.setZapperX(stream.readInt());
                break;
            case 90:
                stream.writeInt(api.getZapperY());
                break;
            case 91:
                api.setZapperY(stream.readInt());
                break;
            case 92:
                api.setColor(stream.readInt());
                break;
            case 93:
                stream.writeInt(api.getColor());
                break;
            case 94:
                api.setClip(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            case 95:
                api.clipRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            case 96:
                api.resetClip();
                break;
            case 97:
                api.copyArea(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 98:
                api.drawLine(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            case 99:
                api.drawOval(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            // 100 contains array parameters.
            // 101 contains array parameters.
            case 102:
                api.drawRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            case 103:
                api.drawRoundRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 104:
                api.draw3DRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readBoolean());
                break;
            case 105:
                api.drawArc(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 106:
                api.fill3DRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readBoolean());
                break;
            case 107:
                api.fillArc(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 108:
                api.fillOval(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            // 109 contains array parameters.
            case 110:
                api.fillRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt());
                break;
            case 111:
                api.fillRoundRect(stream.readInt(), stream.readInt(), stream.readInt(),
                        stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 112:
                api.drawChar(stream.readChar(), stream.readInt(), stream.readInt());
                break;
            // 113 contains array parameters.
            // 114 contains array parameters.
            // 115 contains array parameters.
            case 116:
                api.drawSprite(stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 117:
                api.setPixel(stream.readInt(), stream.readInt(), stream.readInt());
                break;
            case 118:
                stream.writeInt(api.getPixel(stream.readInt(), stream.readInt()));
                break;
            case 120:
                api.powerCycle();
                break;
            case 121:
                api.reset();
                break;
            case 122:
                api.deleteSprite(stream.readInt());
                break;
            case 123:
                api.setSpeed(stream.readInt());
                break;
            case 124:
                api.stepToNextFrame();
                break;
            // 125 contains array parameters.
            case 126:
                stream.writeString(api.getWorkingDirectory());
                break;
            case 127:
                stream.writeString(api.getContentDirectory());
                break;
            // 128 contains array parameters.
            // 129 contains array parameters.
            // 130 contains array parameters.
            // 131 contains array parameters.
            // 132 contains array parameters.
            case 133:
                api.close();
                break;
            // 134 contains array parameters.
            // 135 contains array parameters.
            case 136:
                api.quickSaveState(stream.readInt());
                break;
            case 137:
                api.quickLoadState(stream.readInt());
                break;
            // 138 contains array parameters.
            case 139:
                stream.writeString(api.getTVSystem());
                break;
            case 140:
                stream.writeInt(api.getDiskSides());
                break;
            case 141:
                api.insertDisk(stream.readInt(), stream.readInt());
                break;
            case 142:
                api.flipDiskSide();
                break;
            case 143:
                api.ejectDisk();
                break;
            case 144:
                api.insertCoin();
                break;
            case 145:
                api.pressServiceButton();
                break;
            case 146:
                api.screamIntoMicrophone();
                break;
            case 147:
                api.glitch();
                break;
            case 148:
                stream.writeString(api.getFileInfo());
                break;
            case 149:
                api.setFullscreenMode(stream.readBoolean());
                break;
            case 150:
                api.saveScreenshot();
                break;
            // 151 contains array parameters.
            case 152:
                api.removeCheat(stream.readInt(), stream.readInt(), stream.readInt());
                break;
            // 153 contains array parameters.
            // 154 contains array parameters.
            // 155 contains array parameters.
            // 156 contains array parameters.
            case 157:
                stream.writeInt(api.getPrgRomSize());
                break;
            case 158:
                stream.writeInt(api.readPrgRom(stream.readInt()));
                break;
            case 159:
                api.writePrgRom(stream.readInt(), stream.readInt());
                break;
            case 160:
                stream.writeInt(api.getChrRomSize());
                break;
            case 161:
                stream.writeInt(api.readChrRom(stream.readInt()));
                break;
            case 162:
                api.writeChrRom(stream.readInt(), stream.readInt());
                break;
            // 163 contains array parameters.
            // 164 contains array parameters.
            default:
                throw new IOException("Unknown method: " + methodValue);
        }
    }
}